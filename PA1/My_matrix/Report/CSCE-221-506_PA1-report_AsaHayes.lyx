#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{indentfirst}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\align center

\size large
\color black
CSCE 221 Cover Page
\begin_inset Newline newline
\end_inset

 Programming Assignment #1 
\begin_inset Newline newline
\end_inset

Due by February 4 midnight to eCampus
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\align center

\size large
\color black
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\align center

\size large
\color black
First Name: Asa Last Name: Hayes UIN: 525003952
\begin_inset VSpace defskip
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\align center

\size large
\color black
User Name AsaHayes E-mail address
\size default
\color inherit
: asahayes@tamu.edu
\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Quotation
Please list all sources in the table below including web pages which you
 used to solve or implement the current homework.
 If you fail to cite sources you can get a lower number of points or even
 zero, read more: 
\color blue

\begin_inset CommandInset href
LatexCommand href
name "Aggie Honor System Office"
target "http://aggiehonor.tamu.edu/"

\end_inset

 
\color inherit

\begin_inset VSpace defskip
\end_inset


\begin_inset VSpace defskip
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="13" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Type of sources 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
People
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Josiah Egner
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Web pages (provide URL) 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset CommandInset href
LatexCommand href
name "Clarification on use of templated functions."
target "http://forums.devx.com/showthread.php?171731-Newbie-need-help-with-C-template"

\end_inset


\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Other Sources 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Several programming assignments from CSCE-121 with Dr.
 Moore
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard
\begin_inset VSpace vfill
\end_inset


\end_layout

\begin_layout Standard
\align center
I certify that I have listed all the sources that I used to develop the
 solutions/codes to the submitted work.
\end_layout

\begin_layout Standard
\align center
“
\emph on
On my honor as an Aggie, I have neither given nor received any unauthorized
 help on this academic work.
\emph default
” 
\end_layout

\begin_layout Standard
\begin_inset VSpace bigskip
\end_inset


\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="6">
<features tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Your Name: 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Asa
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
R.
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Hayes
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Date: 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
7 February, 2018
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Title
Report
\end_layout

\begin_layout Part
Program Description and Purpose of Assignment
\end_layout

\begin_layout Standard
You want to implement a data structure that allows to tabulate data coming
 from many different models such as communication or social networks.
 The entries in a table may express a relation between two groups of people,
 e.g.
 the number 1 could denote friends and 0 otherwise.
 This type of data structure could be also used to represent a location
 of an object in a two-dimensional space using its coordinates, e.g.
 a pair (i, j) to refer to a particular element of the table.
 These tables are called two-dimensional arrays or matrices.
 The Background section of this assignment provides some basic information
 about matrices and their operations.
\end_layout

\begin_layout Standard
The purpose of this individual programming assignment is to learn about
 an elementary design, implementation, and testing of a simple C++ class
 called My_matrix.
 The class implementation allows you to understand and overview the basic
 C++ concepts like pointers, memory allocation, deallocation, dynamic arrays,
 constructors, copy or move constructors and assignments, destructors, operator
 overloading, reading from and writing to a file.
 
\end_layout

\begin_layout Part
Description of Data Structures
\end_layout

\begin_layout Standard
In the first phase of the assignment, implement in C++ a class My_matrix
 that can hold data of integer type (int).
 The two parameters representing a matrix dimensions are usually not known
 in advance so it is necessary to allocate the arrays dynamically.
 In the second phase, you will need to write a generic version of the class
 My_matrix that can handle different types of numerical data.
 
\end_layout

\begin_layout Standard
The My_matrix class takes either a set of two dimensions (for rows and columns)
 or another My_matrix object as input.
 From this, the object creates an int** (or T** in part 2), which is an
 array containing pointers to the sub-arrays that make up the matrix part
 of the My_matrix object.
 Once the matrix is created, it can be filled with data from a file, data
 from another My_matrix object, or manually set per element.
 Input and display are facilitated by the overloading of the input and output
 operators.
 Operators * and + are also overloaded, to allow for some commonly used
 matrix operations for compatible matrices.
 
\end_layout

\begin_layout Part
Instructions for Compilation
\end_layout

\begin_layout Standard
No additional effort is needed for compilation, the makefile is configured
 for each part to compile entirely with 
\begin_inset Quotes eld
\end_inset

make all
\begin_inset Quotes erd
\end_inset

 and run with 
\begin_inset Quotes eld
\end_inset

./main
\begin_inset Quotes erd
\end_inset

.
 The only caution would be to not remove any of the test input or output
 files, as the testing part of main{} requires them.
\end_layout

\begin_layout Part
Logical Exceptions; Bug Descriptions
\end_layout

\begin_layout Standard
Apart from the code blocks that lead to errors intentionally, there do not
 seem to be any places for logical errors or bugs besides the plain invalid
 input errors.
 
\end_layout

\begin_layout Part
C++ Object Oriented/Generic Programming Features
\end_layout

\begin_layout Standard
The most important features of object-oriented programming that are shown
 in this project are reusability and modularity.
 As My_matrix has a large amount of usages, having to manually create a
 structure each and every time one was needed would ruin readability and
 maintainability.
 Being able to simply create new My_matrix objects with one command not
 only creates better looking code, but reduces debug time needed, due to
 less variables having to be dragged around.
 The modularity of the My_matrix class is also important, as most of the
 functions contained within have no analogue within standard libraries and
 need to be tailored to the function.
 For example, the multiplication operator is much differently applied to
 a matrix than just 2 numbers as it would usually be interpreted, but allowing
 a specialized multiplier, we conserve the idea of the operator while still
 having it carry out the proper function, instead of creating an entirely
 new operator.
 As for general programming, the use of generic type T allows for much more
 versatility of what My_matrix is able to hold, allowing all types of numbers
 instead of just the default integers.
\end_layout

\begin_layout Part
Evidences of Testing
\end_layout

\begin_layout Standard
Note: The tests in the screenshots were run on Windows 7 with MinGW, but
 results were verified and identical when run on the TAMU UNIX server.
\end_layout

\begin_layout Section
Evidence: Part 1
\end_layout

\begin_layout Subsection
Test 1: Initialization of My_matrix objects, setting of matrix elements,
 demonstration of output operator
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename Part1Test1.jpg
	lyxscale 50
	width 100line%
	height 25pheight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Subsection
Test 2: Reading from input file into new My_matrix, displaying, reading
 to output file
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename Part1Test2jpg.jpg
	width 100line%
	height 50pheight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Subsection
Test 3: Copy Constructor and Copy Assignment Operators
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename Part1Test3.PNG
	display false
	width 100line%
	height 50pheight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Subsection
Test 4: Multiplication Operator
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename Part1Test4.PNG
	display false
	width 100line%
	height 50pheight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Subsection
Test 5: Addition Operator
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename Part1Test5.PNG
	display false
	width 100line%
	height 50pheight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Section
Evidence: Part 2 
\end_layout

\begin_layout Standard
Screenshots will be focusing on the My_matrix<double> type, as the My_matrix<lon
g> type is visibly identical to My_matrix<int> which was demonstrated in
 part 1.
\end_layout

\begin_layout Subsection
Test 1: Initialization of My_matrix<double> object, setting of matrix elements,
 demonstration of output operator
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename Part2Test1.PNG
	display false
	width 100line%
	height 50pheight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Subsection
Test 2: Reading from input file into new My_matrix<double>, displaying,
 reading to output file
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename Part2Test2.PNG
	display false
	width 100line%
	height 50pheight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Subsection
Test 3: Copy Constructor and Copy Assignment Operators
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename Part2Test3.PNG
	display false
	width 100line%
	height 50pheight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Subsection
Test 4: Multiplication Operator, with test for incompatible matrices
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename Part2Test4a.PNG
	display false
	width 100line%
	height 50pheight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename Part2Test4b.PNG
	display false
	width 100line%
	height 50pheight%
	keepAspectRatio

\end_inset


\end_layout

\begin_layout Subsection
Test 5: Addition Operator, with test for incompatible matrices
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename Part2Test5.PNG
	display false
	width 100line%
	height 50pheight%
	keepAspectRatio

\end_inset


\end_layout

\end_body
\end_document
